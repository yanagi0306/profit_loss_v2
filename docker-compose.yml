version: '3.8'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes:
      - ./backend/:/var/www/html
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_NAME}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}

  web:
    container_name: web
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    depends_on:
      - app
    volumes:
      - ./backend/:/var/www/html
      # SSL
#      - ./cert:/etc/ssl/private/



#  postgres:
#    container_name: db
#    build:
#      context: ./postgres
#      dockerfile: Dockerfile
#    ports:
#      - "3306:3306"
#    environment:
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
#      TZ: Asia/Tokyo
#    tty: true
#    volumes:
#      - "postgres_db:/var/lib/postgresql/data"
#      - "./postgres/initdb:/docker-entrypoint-initdb.d"
#    networks:
#      - postgres-network
#    restart: always
#
#volumes:
#  postgres_db:
#networks:
#  postgres-network:
#    name: postgres-network
#  local-network:
#    external: true
#    name: local-network

  mysql:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
volumes:
  mysql-data:

#  https-portal:
#    image: steveltn/https-portal:1
#    container_name: https_portal
#    ports:
#      - "{WEB_PORT}:${WEB_PORT}"
#      - "{WEB_PORT_SSL}:${WEB_PORT_SSL}"
#    tty: true
#    restart: always
#    volumes:
#      - ./Certs/:/var/lib/https-portal/
#    environment:
#      DOMAINS: 'http://app:8080'
#      STAGE: "production"
#      # FORCE_RENEW: 'true'
#    links:
#      - app

